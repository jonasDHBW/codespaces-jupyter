import random
import requests
import webbrowser
import pyautogui
import time


# functions for buttons
def clickOnSortBy():
    while True:
        sortBy = pyautogui.locateCenterOnScreen(r'Projekt\buttons\sortByGIT.png')
        
        if sortBy is not None:
            pyautogui.moveTo(sortBy)
            pyautogui.click()
            print("sortBy found!")
            break  
        else:
            print("sortBy not found")
            
def clickOnPastWeek():
    while True:
        pastWeek = pyautogui.locateCenterOnScreen(r'Projekt\buttons\pastWeekGIT.png')
        
        if pastWeek is not None:
            pyautogui.moveTo(pastWeek)
            pyautogui.click()
            print("pastWeek found!")
            break  
        else:
            print("pastWeek not found")
            
def clickOnChatSymbol():
    while True:
        chatSymbol = pyautogui.locateCenterOnScreen(r'Projekt\buttons\chatGIT.png')
        
        
        #search for symbol 0 or 1
        if chatSymbol is not None:
            pyautogui.moveTo(chatSymbol)
            pyautogui.click(+100, +20)
            print("chatSymbol found!")
            break  
        else:
            print("chatSymbol not found")


def load_urls_and_names(filename):
    urls_and_names = {}
    with open(filename, 'r') as file:
        for line in file:
            url, name = line.strip().split(',')
            urls_and_names[url.strip()] = name.strip()
    return urls_and_names

def get_random_url_and_name(urls_and_names):
    random_url = random.choice(list(urls_and_names.keys()))
    return random_url, urls_and_names[random_url]

def check_page_suitability():
    receivedComments = pyautogui.locateCenterOnScreen(r'file')
    if receivedComments == None:
        return True
    else:
        return False

def access_random_website():
    filename = r'Projekt\urls.txt'  # Name der Textdatei mit den URLs und Namen
    urls_and_names = load_urls_and_names(filename)
    
    while urls_and_names:
        random_url, name = get_random_url_and_name(urls_and_names)
        print("Accessing random website:", random_url)
        print("Name:", name)
        
        try:
            webbrowser.open(random_url)
            print("Website successfully opened in the default web browser.")
            
            #try to click the buttons to get to the discussions 
            time.sleep(5)  # Waiting for the page to load, adjust this if needed
            clickOnSortBy()
            time.sleep(2)
            clickOnPastWeek()
            time.sleep(2)
            clickOnChatSymbol()
            
            # Decide whether the page is suitable or not
            if check_page_suitability():
                print("You can comment!")
                break  
            else:
                print("Two comments already exist")
        except Exception as e:
            print("Error:", e)
        
        # Remove the failed link from the dictionary and try again
        del urls_and_names[random_url]
    
    if not urls_and_names:
        print("No more valid links available.")

if __name__ == "__main__":
    access_random_website()
